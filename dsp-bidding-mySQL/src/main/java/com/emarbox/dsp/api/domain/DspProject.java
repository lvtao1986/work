// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dsp-project.proto

package com.emarbox.dsp.api.domain;

public final class DspProject {
  private DspProject() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DspProjectInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .DspProjectInfo.EnumOperationType operationType = 1;
    boolean hasOperationType();
    com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType getOperationType();
    
    // optional int32 userId = 21;
    boolean hasUserId();
    int getUserId();
    
    // required int32 projectId = 22;
    boolean hasProjectId();
    int getProjectId();
    
    // optional string projectName = 23;
    boolean hasProjectName();
    String getProjectName();
    
    // repeated .DspCommissionRateInfo commissionRateInfo = 51;
    java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> 
        getCommissionRateInfoList();
    com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo getCommissionRateInfo(int index);
    int getCommissionRateInfoCount();
    java.util.List<? extends com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder> 
        getCommissionRateInfoOrBuilderList();
    com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder getCommissionRateInfoOrBuilder(
        int index);
  }
  public static final class DspProjectInfo extends
      com.google.protobuf.GeneratedMessage
      implements DspProjectInfoOrBuilder {
    // Use DspProjectInfo.newBuilder() to construct.
    private DspProjectInfo(Builder builder) {
      super(builder);
    }
    private DspProjectInfo(boolean noInit) {}
    
    private static final DspProjectInfo defaultInstance;
    public static DspProjectInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public DspProjectInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.emarbox.dsp.api.domain.DspProject.internal_static_DspProjectInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.emarbox.dsp.api.domain.DspProject.internal_static_DspProjectInfo_fieldAccessorTable;
    }
    
    public enum EnumOperationType
        implements com.google.protobuf.ProtocolMessageEnum {
      SYNC(0, 0),
      NOTIFY(1, 1),
      DELETE(2, 2),
      ;
      
      public static final int SYNC_VALUE = 0;
      public static final int NOTIFY_VALUE = 1;
      public static final int DELETE_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static EnumOperationType valueOf(int value) {
        switch (value) {
          case 0: return SYNC;
          case 1: return NOTIFY;
          case 2: return DELETE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<EnumOperationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EnumOperationType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EnumOperationType>() {
              public EnumOperationType findValueByNumber(int number) {
                return EnumOperationType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final EnumOperationType[] VALUES = {
        SYNC, NOTIFY, DELETE, 
      };
      
      public static EnumOperationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private EnumOperationType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:DspProjectInfo.EnumOperationType)
    }
    
    private int bitField0_;
    // required .DspProjectInfo.EnumOperationType operationType = 1;
    public static final int OPERATIONTYPE_FIELD_NUMBER = 1;
    private com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType operationType_;
    public boolean hasOperationType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType getOperationType() {
      return operationType_;
    }
    
    // optional int32 userId = 21;
    public static final int USERID_FIELD_NUMBER = 21;
    private int userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getUserId() {
      return userId_;
    }
    
    // required int32 projectId = 22;
    public static final int PROJECTID_FIELD_NUMBER = 22;
    private int projectId_;
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getProjectId() {
      return projectId_;
    }
    
    // optional string projectName = 23;
    public static final int PROJECTNAME_FIELD_NUMBER = 23;
    private java.lang.Object projectName_;
    public boolean hasProjectName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getProjectName() {
      java.lang.Object ref = projectName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          projectName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProjectNameBytes() {
      java.lang.Object ref = projectName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        projectName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .DspCommissionRateInfo commissionRateInfo = 51;
    public static final int COMMISSIONRATEINFO_FIELD_NUMBER = 51;
    private java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> commissionRateInfo_;
    public java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> getCommissionRateInfoList() {
      return commissionRateInfo_;
    }
    public java.util.List<? extends com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder> 
        getCommissionRateInfoOrBuilderList() {
      return commissionRateInfo_;
    }
    public int getCommissionRateInfoCount() {
      return commissionRateInfo_.size();
    }
    public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo getCommissionRateInfo(int index) {
      return commissionRateInfo_.get(index);
    }
    public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder getCommissionRateInfoOrBuilder(
        int index) {
      return commissionRateInfo_.get(index);
    }
    
    private void initFields() {
      operationType_ = com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType.SYNC;
      userId_ = 0;
      projectId_ = 0;
      projectName_ = "";
      commissionRateInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOperationType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCommissionRateInfoCount(); i++) {
        if (!getCommissionRateInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, operationType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(21, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(22, projectId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(23, getProjectNameBytes());
      }
      for (int i = 0; i < commissionRateInfo_.size(); i++) {
        output.writeMessage(51, commissionRateInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operationType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, projectId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getProjectNameBytes());
      }
      for (int i = 0; i < commissionRateInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, commissionRateInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspProjectInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.emarbox.dsp.api.domain.DspProject.DspProjectInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.emarbox.dsp.api.domain.DspProject.DspProjectInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.emarbox.dsp.api.domain.DspProject.internal_static_DspProjectInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.emarbox.dsp.api.domain.DspProject.internal_static_DspProjectInfo_fieldAccessorTable;
      }
      
      // Construct using com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommissionRateInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        operationType_ = com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType.SYNC;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        projectName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (commissionRateInfoBuilder_ == null) {
          commissionRateInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          commissionRateInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.getDescriptor();
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspProjectInfo getDefaultInstanceForType() {
        return com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.getDefaultInstance();
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspProjectInfo build() {
        com.emarbox.dsp.api.domain.DspProject.DspProjectInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.emarbox.dsp.api.domain.DspProject.DspProjectInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.emarbox.dsp.api.domain.DspProject.DspProjectInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspProjectInfo buildPartial() {
        com.emarbox.dsp.api.domain.DspProject.DspProjectInfo result = new com.emarbox.dsp.api.domain.DspProject.DspProjectInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operationType_ = operationType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.projectId_ = projectId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.projectName_ = projectName_;
        if (commissionRateInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            commissionRateInfo_ = java.util.Collections.unmodifiableList(commissionRateInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.commissionRateInfo_ = commissionRateInfo_;
        } else {
          result.commissionRateInfo_ = commissionRateInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.emarbox.dsp.api.domain.DspProject.DspProjectInfo) {
          return mergeFrom((com.emarbox.dsp.api.domain.DspProject.DspProjectInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.emarbox.dsp.api.domain.DspProject.DspProjectInfo other) {
        if (other == com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.getDefaultInstance()) return this;
        if (other.hasOperationType()) {
          setOperationType(other.getOperationType());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasProjectName()) {
          setProjectName(other.getProjectName());
        }
        if (commissionRateInfoBuilder_ == null) {
          if (!other.commissionRateInfo_.isEmpty()) {
            if (commissionRateInfo_.isEmpty()) {
              commissionRateInfo_ = other.commissionRateInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCommissionRateInfoIsMutable();
              commissionRateInfo_.addAll(other.commissionRateInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.commissionRateInfo_.isEmpty()) {
            if (commissionRateInfoBuilder_.isEmpty()) {
              commissionRateInfoBuilder_.dispose();
              commissionRateInfoBuilder_ = null;
              commissionRateInfo_ = other.commissionRateInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              commissionRateInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCommissionRateInfoFieldBuilder() : null;
            } else {
              commissionRateInfoBuilder_.addAllMessages(other.commissionRateInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOperationType()) {
          
          return false;
        }
        if (!hasProjectId()) {
          
          return false;
        }
        for (int i = 0; i < getCommissionRateInfoCount(); i++) {
          if (!getCommissionRateInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType value = com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                operationType_ = value;
              }
              break;
            }
            case 168: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00000004;
              projectId_ = input.readInt32();
              break;
            }
            case 186: {
              bitField0_ |= 0x00000008;
              projectName_ = input.readBytes();
              break;
            }
            case 410: {
              com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder subBuilder = com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCommissionRateInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .DspProjectInfo.EnumOperationType operationType = 1;
      private com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType operationType_ = com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType.SYNC;
      public boolean hasOperationType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType getOperationType() {
        return operationType_;
      }
      public Builder setOperationType(com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        operationType_ = value;
        onChanged();
        return this;
      }
      public Builder clearOperationType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        operationType_ = com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.EnumOperationType.SYNC;
        onChanged();
        return this;
      }
      
      // optional int32 userId = 21;
      private int userId_ ;
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getUserId() {
        return userId_;
      }
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 projectId = 22;
      private int projectId_ ;
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getProjectId() {
        return projectId_;
      }
      public Builder setProjectId(int value) {
        bitField0_ |= 0x00000004;
        projectId_ = value;
        onChanged();
        return this;
      }
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        projectId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string projectName = 23;
      private java.lang.Object projectName_ = "";
      public boolean hasProjectName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getProjectName() {
        java.lang.Object ref = projectName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          projectName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProjectName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        projectName_ = value;
        onChanged();
        return this;
      }
      public Builder clearProjectName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        projectName_ = getDefaultInstance().getProjectName();
        onChanged();
        return this;
      }
      void setProjectName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        projectName_ = value;
        onChanged();
      }
      
      // repeated .DspCommissionRateInfo commissionRateInfo = 51;
      private java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> commissionRateInfo_ =
        java.util.Collections.emptyList();
      private void ensureCommissionRateInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          commissionRateInfo_ = new java.util.ArrayList<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo>(commissionRateInfo_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder> commissionRateInfoBuilder_;
      
      public java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> getCommissionRateInfoList() {
        if (commissionRateInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(commissionRateInfo_);
        } else {
          return commissionRateInfoBuilder_.getMessageList();
        }
      }
      public int getCommissionRateInfoCount() {
        if (commissionRateInfoBuilder_ == null) {
          return commissionRateInfo_.size();
        } else {
          return commissionRateInfoBuilder_.getCount();
        }
      }
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo getCommissionRateInfo(int index) {
        if (commissionRateInfoBuilder_ == null) {
          return commissionRateInfo_.get(index);
        } else {
          return commissionRateInfoBuilder_.getMessage(index);
        }
      }
      public Builder setCommissionRateInfo(
          int index, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo value) {
        if (commissionRateInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.set(index, value);
          onChanged();
        } else {
          commissionRateInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCommissionRateInfo(
          int index, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder builderForValue) {
        if (commissionRateInfoBuilder_ == null) {
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          commissionRateInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCommissionRateInfo(com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo value) {
        if (commissionRateInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.add(value);
          onChanged();
        } else {
          commissionRateInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCommissionRateInfo(
          int index, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo value) {
        if (commissionRateInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.add(index, value);
          onChanged();
        } else {
          commissionRateInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCommissionRateInfo(
          com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder builderForValue) {
        if (commissionRateInfoBuilder_ == null) {
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.add(builderForValue.build());
          onChanged();
        } else {
          commissionRateInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCommissionRateInfo(
          int index, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder builderForValue) {
        if (commissionRateInfoBuilder_ == null) {
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          commissionRateInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCommissionRateInfo(
          java.lang.Iterable<? extends com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo> values) {
        if (commissionRateInfoBuilder_ == null) {
          ensureCommissionRateInfoIsMutable();
          super.addAll(values, commissionRateInfo_);
          onChanged();
        } else {
          commissionRateInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCommissionRateInfo() {
        if (commissionRateInfoBuilder_ == null) {
          commissionRateInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          commissionRateInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeCommissionRateInfo(int index) {
        if (commissionRateInfoBuilder_ == null) {
          ensureCommissionRateInfoIsMutable();
          commissionRateInfo_.remove(index);
          onChanged();
        } else {
          commissionRateInfoBuilder_.remove(index);
        }
        return this;
      }
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder getCommissionRateInfoBuilder(
          int index) {
        return getCommissionRateInfoFieldBuilder().getBuilder(index);
      }
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder getCommissionRateInfoOrBuilder(
          int index) {
        if (commissionRateInfoBuilder_ == null) {
          return commissionRateInfo_.get(index);  } else {
          return commissionRateInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder> 
           getCommissionRateInfoOrBuilderList() {
        if (commissionRateInfoBuilder_ != null) {
          return commissionRateInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(commissionRateInfo_);
        }
      }
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder addCommissionRateInfoBuilder() {
        return getCommissionRateInfoFieldBuilder().addBuilder(
            com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.getDefaultInstance());
      }
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder addCommissionRateInfoBuilder(
          int index) {
        return getCommissionRateInfoFieldBuilder().addBuilder(
            index, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.getDefaultInstance());
      }
      public java.util.List<com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder> 
           getCommissionRateInfoBuilderList() {
        return getCommissionRateInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder> 
          getCommissionRateInfoFieldBuilder() {
        if (commissionRateInfoBuilder_ == null) {
          commissionRateInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder, com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder>(
                  commissionRateInfo_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          commissionRateInfo_ = null;
        }
        return commissionRateInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:DspProjectInfo)
    }
    
    static {
      defaultInstance = new DspProjectInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DspProjectInfo)
  }
  
  public interface DspCommissionRateInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 supplierId = 11;
    boolean hasSupplierId();
    int getSupplierId();
    
    // required double commissionRate = 12;
    boolean hasCommissionRate();
    double getCommissionRate();
  }
  public static final class DspCommissionRateInfo extends
      com.google.protobuf.GeneratedMessage
      implements DspCommissionRateInfoOrBuilder {
    // Use DspCommissionRateInfo.newBuilder() to construct.
    private DspCommissionRateInfo(Builder builder) {
      super(builder);
    }
    private DspCommissionRateInfo(boolean noInit) {}
    
    private static final DspCommissionRateInfo defaultInstance;
    public static DspCommissionRateInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public DspCommissionRateInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.emarbox.dsp.api.domain.DspProject.internal_static_DspCommissionRateInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.emarbox.dsp.api.domain.DspProject.internal_static_DspCommissionRateInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 supplierId = 11;
    public static final int SUPPLIERID_FIELD_NUMBER = 11;
    private int supplierId_;
    public boolean hasSupplierId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSupplierId() {
      return supplierId_;
    }
    
    // required double commissionRate = 12;
    public static final int COMMISSIONRATE_FIELD_NUMBER = 12;
    private double commissionRate_;
    public boolean hasCommissionRate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getCommissionRate() {
      return commissionRate_;
    }
    
    private void initFields() {
      supplierId_ = 0;
      commissionRate_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSupplierId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommissionRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(11, supplierId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(12, commissionRate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, supplierId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, commissionRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.emarbox.dsp.api.domain.DspProject.internal_static_DspCommissionRateInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.emarbox.dsp.api.domain.DspProject.internal_static_DspCommissionRateInfo_fieldAccessorTable;
      }
      
      // Construct using com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        supplierId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        commissionRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.getDescriptor();
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo getDefaultInstanceForType() {
        return com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.getDefaultInstance();
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo build() {
        com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo buildPartial() {
        com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo result = new com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.supplierId_ = supplierId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commissionRate_ = commissionRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo) {
          return mergeFrom((com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo other) {
        if (other == com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.getDefaultInstance()) return this;
        if (other.hasSupplierId()) {
          setSupplierId(other.getSupplierId());
        }
        if (other.hasCommissionRate()) {
          setCommissionRate(other.getCommissionRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSupplierId()) {
          
          return false;
        }
        if (!hasCommissionRate()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000001;
              supplierId_ = input.readInt32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000002;
              commissionRate_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 supplierId = 11;
      private int supplierId_ ;
      public boolean hasSupplierId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSupplierId() {
        return supplierId_;
      }
      public Builder setSupplierId(int value) {
        bitField0_ |= 0x00000001;
        supplierId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSupplierId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        supplierId_ = 0;
        onChanged();
        return this;
      }
      
      // required double commissionRate = 12;
      private double commissionRate_ ;
      public boolean hasCommissionRate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getCommissionRate() {
        return commissionRate_;
      }
      public Builder setCommissionRate(double value) {
        bitField0_ |= 0x00000002;
        commissionRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearCommissionRate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commissionRate_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DspCommissionRateInfo)
    }
    
    static {
      defaultInstance = new DspCommissionRateInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DspCommissionRateInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DspProjectInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DspProjectInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DspCommissionRateInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DspCommissionRateInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021dsp-project.proto\"\355\001\n\016DspProjectInfo\0228" +
      "\n\roperationType\030\001 \002(\0162!.DspProjectInfo.E" +
      "numOperationType\022\016\n\006userId\030\025 \001(\005\022\021\n\tproj" +
      "ectId\030\026 \002(\005\022\023\n\013projectName\030\027 \001(\t\0222\n\022comm" +
      "issionRateInfo\0303 \003(\0132\026.DspCommissionRate" +
      "Info\"5\n\021EnumOperationType\022\010\n\004SYNC\020\000\022\n\n\006N" +
      "OTIFY\020\001\022\n\n\006DELETE\020\002\"C\n\025DspCommissionRate" +
      "Info\022\022\n\nsupplierId\030\013 \002(\005\022\026\n\016commissionRa" +
      "te\030\014 \002(\001B(\n\032com.emarbox.dsp.api.domainB\n" +
      "DspProject"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DspProjectInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DspProjectInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DspProjectInfo_descriptor,
              new java.lang.String[] { "OperationType", "UserId", "ProjectId", "ProjectName", "CommissionRateInfo", },
              com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.class,
              com.emarbox.dsp.api.domain.DspProject.DspProjectInfo.Builder.class);
          internal_static_DspCommissionRateInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_DspCommissionRateInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DspCommissionRateInfo_descriptor,
              new java.lang.String[] { "SupplierId", "CommissionRate", },
              com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.class,
              com.emarbox.dsp.api.domain.DspProject.DspCommissionRateInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
